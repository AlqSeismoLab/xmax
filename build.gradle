import java.text.SimpleDateFormat

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = "com.isti.xmax.XMAX"

/* Get first three version numbers from code.json */
def codeJson = new groovy.json.JsonSlurper().parseText(new File("code.json").text)
def jsonVersion = codeJson.version[0]
/* Get last version number from commit counts */
def lastTagHash = "git rev-list --tags --max-count=1".execute().text
lastTagHash = lastTagHash.substring(0, lastTagHash.length() - 1)
def commitCount = ("git rev-list "+lastTagHash+".. --count").execute().text
commitCount = commitCount.substring(0, commitCount.length() - 1)

version = "$jsonVersion.$commitCount"


sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
    maven {
       url "http://www.seis.sc.edu/software/maven2"
    }
}

dependencies {
    compile project(':asl-java-utils')
    
    compile group: 'org.jfree', name: 'jfreechart', version: '1.0.+'
    compile group: 'org.jfree', name: 'jcommon', version: '1.0.+'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.7'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
    compile group: 'org.jdom', name: 'jdom', version: '1.1'
    compile group: 'edu.emory.mathcs', name: 'JTransforms', version: '2.4'
    compile group: 'log4j', name: 'log4j', version: '1.2.16'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.10'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

    compile group: 'edu.iris.dmc', name: 'java-seed', version: '3.8.5'

    compile group: 'uk.me.berndporr', name: 'iirj', version: '1.0'

    compile group: 'edu.sc.seis', name: 'seedCodec', version: '1.0.11'
    compile group: 'edu.sc.seis', name: 'TauP', version: '2.4.5'
    compile group: 'edu.sc.seis', name: 'seisFile', version: '1.8.0'

//seis.sc.edu maven dependencies

    //FissureIDL is bundled in jevalresp
    //compile group: 'edu.sc.seis', name: 'fissuresIDL', version: '1.0'
    compile (group: 'edu.sc.seis', name: 'fissuresUtil', version: '1.1.5'){
        exclude group: 'jfreechart', module: 'jcommon'
        exclude group: 'jfreechart', module: 'jfreechart'
        exclude group: 'edu.sc.seis', module: 'fissuresIDL'
    }
    compile group: 'xerces', name: 'xml-apis', version: '2.10.0'

    compile files('./lib/JEvalResp.jar', './lib/ekit-1.4.jar')

    testCompile group: 'junit', name: 'junit', version: '4.+'
}



jar {
    /* Adds all dependent libraries*/
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    manifest {
        attributes 'Implementation-Title': 'XMAX',
                   'Implementation-Version': version,
                   'Main-Class': mainClassName,
                   'Build-Timestamp': new SimpleDateFormat("yyyy.MM.dd").format(new Date())
    }
}

/*Turn off doclint since it is far too strict and breaks the javadoc everytime*/
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

task copyJar(type: Copy) {
    from jar
    into rootDir
}

task setupJEvalResp(type: Exec) {
    commandLine './jevalresp_setup.bash'
}

task gitSubmodule(type: Exec) {
    description 'Update git submodules'
    commandLine 'git', 'submodule', 'update', '--init', '--recursive'
}

build.dependsOn gitSubmodule

compileJava.dependsOn(setupJEvalResp, gitSubmodule)

javadoc {
    options.memberLevel = JavadocMemberLevel.PRIVATE
}


